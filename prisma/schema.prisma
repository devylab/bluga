// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id
  avatar    String?  @db.VarChar(255)
  firstName String?  @db.VarChar(255)
  lastName  String?  @db.VarChar(255)
  username  String   @unique
  email     String   @unique
  password  String   @db.VarChar(255)
  contents  Content[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Content {
  id            String          @id
  title         String          @db.VarChar(255)
  slug          String          @db.VarChar(255) @unique
  thumbnail     String          @db.VarChar(255)
  description   String          @db.VarChar(255)
  rawContent    Json
  content       String          @db.Text
  tags          String          @db.Text
  status        ContentStatus   @default(DRAFT)
  author        User            @relation(fields: [authorId], references: [id])
  authorId      String
  category      Category        @relation(fields: [categoryId], references: [id])
  categoryId    String
  ContentMeta   ContentMeta[]
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
}

model Theme {
  id            String          @id
  name          String          @db.VarChar(255) @unique
  status        Boolean         @default(false)
  meta    Json
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
}

model Setting {
  id            String          @id
  name          String          @db.VarChar(255)
  favicon       String?         @db.VarChar(255)
  description   String?         @db.Text
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
}

model ContentMeta {
  id            String          @id
  time          Int          
  views         Int         
  status        ContentStatus   @default(DRAFT)
  content       Content         @relation(fields: [contentId], references: [id], onDelete: Cascade)
  contentId     String          @unique
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
}

model Category {
  id            String          @id
  name          String          @unique
  contents      Content[]
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
}

enum ContentStatus {
  DRAFT
  PRIVATE
  PUBLIC
}
